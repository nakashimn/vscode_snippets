{
	// Place your snippets for cmake here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"cmake startup(executable)": {
		"prefix": "cmake",
		"body": [
			"cmake_minimum_required(VERSION ${1:3.10})",
			"project(${2:project_name} VERSION 0.0.1)",
			"",
			"add_executable(\\${PROJECT_NAME\\} \\${SOURCE_DIR\\}/${3:main.cpp})",
			"",
			"set(CPACK_PROJECT_NAME \\${PROJECT_NAME\\})",
			"set(CPACK_PROJECT_VERSION \\${PROJECT_VERSION\\})",
			"include(CPack)",
			"$4",
		]
	},
	"cmake startup(library)": {
		"prefix": "cmake",
		"body": [
			"cmake_minimum_required(VERSION ${1:3.10})",
			"project(${2:project_name} VERSION 0.0.1)",
			"",
			"add_library(\\${PROJECT_NAME\\} \\${SOURCE_DIR\\}/${3:main.cpp})",
			"",
			"set(CPACK_PROJECT_NAME \\${PROJECT_NAME\\})",
			"set(CPACK_PROJECT_VERSION \\${PROJECT_VERSION\\})",
			"include(CPack)",
			"$4",
		]
	},
	"clean cmake cache": {
		"prefix": "clean cmake cache",
		"body": [
			"# clean-all.cmake",
			"set(cmake_generated ${CMAKE_BINARY_DIR}/CMakeCache.txt",
			"\t\t\t\t\t${CMAKE_BINARY_DIR}/cmake_install.cmake",
			"\t\t\t\t\t${CMAKE_BINARY_DIR}/Makefile",
			"\t\t\t\t\t${CMAKE_BINARY_DIR}/CMakeFiles",
			")",
			"foreach(file ${cmake_generated})",
			"\tif (EXISTS ${file})",
			"\t\tfile(REMOVE_RECURSE ${file})",
			"\tendif()",
			"endforeach(file)"
		]
	}
}
